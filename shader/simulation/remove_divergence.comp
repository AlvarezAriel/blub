// Subtracts pressure gradient from velocity volume to make it divergence free.
// (applies pressure forces)

#version 450

#include "../utilities.glsl"
#include "bindings_write_particles_volume.glsl"

COMPUTE_PASS_VOLUME

void main() {
    vec3 velocityGridPosition = vec3(gl_GlobalInvocationID);
    ivec3 gridCoord = ivec3(gl_GlobalInvocationID);

    vec4 velocity = imageLoad(VelocityVolume, gridCoord);
    //if (velocity.w != CELL_FLUID)
    //    return;

    // Compute pressure gradient with central differences
    ivec3 gridSize = ivec3(textureSize(PressureVolume, 0));
    ivec3 largestGridCoord = gridSize - ivec3(1);

    float pressureAtCenter = texelFetch(PressureVolume, gridCoord, 0).x;

    // At boundary cells the pressure should be such that fluid_velocity * boundary_normal == boundary_velocity * boundary_normal
    vec3 velocityGradient; // Don't need w coordinate anymore, but it's useful for debugging
    {
        ivec3 neighborCellCoord = gridCoord + ivec3(1, 0, 0);

        // Is this a left boundary face:
        if (velocity.w == CELL_SOLID)
            velocity.x = max(0.0, velocity.x);
        // Is this a right boundary face
        else if (gridCoord.x == largestGridCoord.x) //(texelFetch(VelocityVolume, neighborCellCoord, 0).w == CELL_SOLID)
            velocity.x = min(0.0, velocity.x);
        else
            velocity.x -= texelFetch(PressureVolume, neighborCellCoord, 0).x - pressureAtCenter;
    }
    {
        ivec3 neighborCellCoord = gridCoord + ivec3(0, 1, 0);

        // Is this a bottom boundary face:
        if (velocity.w == CELL_SOLID)
            velocity.y = max(0.0, velocity.y);
        // Is this a top boundary face
        else if (gridCoord.y == largestGridCoord.y) //(texelFetch(VelocityVolume, neighborCellCoord, 0).w == CELL_SOLID)
            velocity.y = min(0.0, velocity.y);
        else
            velocity.y -= texelFetch(PressureVolume, neighborCellCoord, 0).x - pressureAtCenter;
    }
    {
        ivec3 neighborCellCoord = gridCoord + ivec3(0, 0, 1);

        // Is this a bottom boundary face:
        if (velocity.w == CELL_SOLID)
            velocity.z = max(0.0, velocity.z);
        // Is this a top boundary face
        else if (gridCoord.z == largestGridCoord.z) //(texelFetch(VelocityVolume, neighborCellCoord, 0).w == CELL_SOLID)
            velocity.z = min(0.0, velocity.z);
        else
            velocity.z -= texelFetch(PressureVolume, neighborCellCoord, 0).x - pressureAtCenter;
    }

    imageStore(VelocityVolume, gridCoord, velocity);
}